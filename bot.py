from vkbottle import Bot, Message
import asyncio, requests, json
import config
import random
import time as tm
from sqlighter import SQLighter
import logging
import keyboards as kb
from vkbottle.api import API
from vkbottle.api.api.util.builtin import LimitedTokenGenerator
from datetime import datetime, date,time,timedelta
from vkbottle.exceptions import VKError
import os
from vkbottle.rule import AbstractMessageRule

token = "053bc3be3550cb649bb2"

bot = Bot(config.API_TOKEN, debug=False)

# –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –ë–î
db = SQLighter('db.db')

#id –∞–¥–º–∏–Ω–∞
admin_id = 111182681

#c—Å—ã–ª–∫–∞ –Ω–∞ –¥–æ–Ω–∞—Ç—ã
link = 'https://vk.com/app6471849_-187582264'
link2 = f'https://api.vkdonate.ru?action=donates&count=50&sort=date&key={token}'
link3 = f'https://vkdonate.ru/api?action=donates&count=50&sort=date&key={token}'

# –°–æ–∑–¥–∞–µ–º –∫–ª–∞—Å—Å –¥–ª—è –ø—Ä–∞–≤–∏–ª–∞
class OnlyMe(AbstractMessageRule):
	async def check(self, message: Message):
		# –§—É–Ω–∫—Ü–∏—è check –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø—Ä–∞–≤–∏–ª–∞
		if message.from_id == admin_id: # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –Ω–∞–ø–∏—Å–∞–≤—à–∏–π —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–º–µ–µ—Ç id = admin_id
			return True # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–π–¥–µ–Ω–∞

@bot.on.message(OnlyMe(), text="/admin")
async def wrapper(ans: Message):
	await ans("–ö–æ–º–∞–Ω–¥—ã –¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –∞–¥–º–∏–Ω–∞", keyboard = kb.kb4())

@bot.on.message(OnlyMe(), text="–°–Ω—è—Ç—å üí∞ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
async def wrapper(ans: Message):
	await ans("–í–≤–µ–¥–∏—Ç–µ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Å–∫–æ–ª—å–∫–æ –Ω—É–∂–Ω–æ —Å–Ω—è—Ç—å\n–ü—Ä–∏–º–µ—Ä: 1392393 40", keyboard = kb.back())
	await bot.branch.add(ans.peer_id, "minus")

@bot.on.message(OnlyMe(), text="–°–Ω—è—Ç—å üßø —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
async def wrapper(ans: Message):
	await ans("–í–≤–µ–¥–∏—Ç–µ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Å–∫–æ–ª—å–∫–æ –Ω—É–∂–Ω–æ —Å–Ω—è—Ç—å\n–ü—Ä–∏–º–µ—Ä: 1392393 40", keyboard = kb.back())
	await bot.branch.add(ans.peer_id, "minus_point")

@bot.on.message(OnlyMe(), text="–ü–æ–ø–æ–ª–Ω–∏—Ç—å üí∞ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
async def wrapper(ans: Message):
	await ans("–í–≤–µ–¥–∏—Ç–µ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –Ω–∞ —Å–∫–æ–ª—å–∫–æ –Ω—É–∂–Ω–æ –ø–æ–ø–æ–ª–Ω–∏—Ç—å\n–ü—Ä–∏–º–µ—Ä: 1392393 40", keyboard = kb.back())
	await bot.branch.add(ans.peer_id, "plus")

@bot.on.message(OnlyMe(), text="–ü–æ–ø–æ–ª–Ω–∏—Ç—å üßø —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
async def wrapper(ans: Message):
	await ans("–í–≤–µ–¥–∏—Ç–µ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –Ω–∞ —Å–∫–æ–ª—å–∫–æ –Ω—É–∂–Ω–æ –ø–æ–ø–æ–ª–Ω–∏—Ç—å\n–ü—Ä–∏–º–µ—Ä: 1392393 40", keyboard = kb.back())
	await bot.branch.add(ans.peer_id, "plus_point")

@bot.on.message(OnlyMe(), text="–ú–∞—Å—Å–æ–≤–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞")
async def wrapper(ans: Message):
	await ans("–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ —Ä–∞–∑–æ—Å–ª–∞—Ç—å –≤—Å–µ–º", keyboard = kb.back())
	await bot.branch.add(ans.peer_id, "mas")

@bot.on.message(OnlyMe(), text="–°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥")
async def wrapper(ans: Message):
	await ans("–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–º–æ–∫–¥ –∏ –∫–æ–ª–∏—á–µ—Å–≤—Ç–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π\n –ü—Ä–∏–º–µ—Ä SDA-QRT-E3T 50", keyboard = kb.back())
	await bot.branch.add(ans.peer_id, "code")

@bot.branch.simple_branch("code")
async def branch(ans: Message):
	if ans.text.lower() == "–Ω–∞–∑–∞–¥":
		await ans("–í–æ–∑–≤—Ä–∞—â–∞—é –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", keyboard = kb.kb4())
		await bot.branch.exit(ans.peer_id)
	else:
		try:
			d = ans.text.split()
			db.add_code(d[0],int(d[1]))
			await ans(f"–ü—Ä–æ–º–æ–∫–æ–¥ {d[0]} –Ω–∞ {d[1]} –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π, –¥–æ–±–∞–≤–ª–µ–Ω!", keyboard = kb.kb4())
			await bot.branch.exit(ans.peer_id)
	
		except Exception as e:
			await ans("–ù–µ –≤–≤–µ—Ä–Ω–æ –≤–≤–µ–¥–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞–∑–∞–¥")

@bot.branch.simple_branch("mas")
async def branch(ans: Message):
	if ans.text.lower() == "–Ω–∞–∑–∞–¥":
		await ans("–í–æ–∑–≤—Ä–∞—â–∞—é –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", keyboard = kb.kb4())
		await bot.branch.exit(ans.peer_id)
	else:
		await ans("–†–∞—Å—Å—ã–ª–∫–∞ –Ω–∞—á–∏–ª–∞—Å—å", keyboard = kb.kb4())
		await bot.branch.exit(ans.peer_id)
		for i in db.get_ckek():
			try:
				await bot.api.messages.send(
					peer_id=i[1],
					message=ans.text,
					random_id=bot.extension.random_id())
			except Exception as e:
				print('erro')
		await ans("–†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å")

@bot.branch.simple_branch("minus")
async def branch(ans: Message):
	if ans.text.lower() == "–Ω–∞–∑–∞–¥":
		await ans("–í–æ–∑–≤—Ä–∞—â–∞—é –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", keyboard = kb.kb4())
		await bot.branch.exit(ans.peer_id)
	else:
		try:
			d = ans.text.split()
			db.minys_bakance(int(d[0]), int(d[1]))
			await ans(f"–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {d[0]}\n–°–Ω—è—Ç–æ —Å –±–∞–ª–∞–Ω—Å–∞(üí∞) {d[1]}", keyboard = kb.kb4())
			await bot.branch.exit(ans.peer_id)
		except Exception as e:
			await ans("–ù–µ –≤–µ—Ä–Ω–æ –≤–≤–µ–¥–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞–∑–∞–¥")

@bot.branch.simple_branch("minus_point")
async def branch(ans: Message):
	if ans.text.lower() == "–Ω–∞–∑–∞–¥":
		await ans("–í–æ–∑–≤—Ä–∞—â–∞—é –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", keyboard = kb.kb4())
		await bot.branch.exit(ans.peer_id)
	else:
		try:
			d = ans.text.split()
			db.minys_bakance_point(int(d[0]), int(d[1]))
			await ans(f"–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {d[0]}\n–°–Ω—è—Ç–æ —Å –±–∞–ª–∞–Ω—Å–∞(üßø) {d[1]}", keyboard = kb.kb4())
			await bot.branch.exit(ans.peer_id)
		except Exception as e:
			await ans("–ù–µ –≤–µ—Ä–Ω–æ –≤–≤–µ–¥–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞–∑–∞–¥")


@bot.branch.simple_branch("plus")
async def branch(ans: Message):
	if ans.text.lower() == "–Ω–∞–∑–∞–¥":
		await ans("–í–æ–∑–≤—Ä–∞—â–∞—é –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", keyboard = kb.kb4())
		await bot.branch.exit(ans.peer_id)
	else:
		try:
			d = ans.text.split()
			db.plus_bakance(int(d[0]), int(d[1]))
			await ans(f"–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {d[0]}\n–°–Ω—è—Ç–æ —Å –±–∞–ª–∞–Ω—Å–∞(üí∞) {d[1]}", keyboard = kb.kb4())
			await bot.branch.exit(ans.peer_id)
		except Exception as e:
			await ans("–ù–µ –≤–µ—Ä–Ω–æ –≤–≤–µ–¥–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞–∑–∞–¥")

@bot.branch.simple_branch("plus_point")
async def branch(ans: Message):
	if ans.text.lower() == "–Ω–∞–∑–∞–¥":
		await ans("–í–æ–∑–≤—Ä–∞—â–∞—é –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", keyboard = kb.kb4())
		await bot.branch.exit(ans.peer_id)
	else:
		try:
			d = ans.text.split()
			db.plus_bakance_point(int(d[0]), int(d[1]))
			await ans(f"–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {d[0]}\n–°–Ω—è—Ç–æ —Å –±–∞–ª–∞–Ω—Å–∞(üßø) {d[1]}", keyboard = kb.kb4())
			await bot.branch.exit(ans.peer_id)
		except Exception as e:
			await ans("–ù–µ –≤–µ—Ä–Ω–æ –≤–≤–µ–¥–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞–∑–∞–¥")

@bot.branch.simple_branch("qiwi")
async def branch(ans: Message):
	if ans.text.lower() == "–Ω–∞–∑–∞–¥":
		await ans("–í–æ–∑–≤—Ä–∞—â–∞—é –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", keyboard = kb.kb0())
		await bot.branch.exit(ans.peer_id)
	else:
		await ans("–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞üòä", keyboard = kb.kb0())
		db.output(ans.peer_id)
		await bot.branch.exit(ans.peer_id)

@bot.branch.simple_branch("carta")
async def branch(ans: Message):
	if ans.text.lower() == "–Ω–∞–∑–∞–¥":
		await ans("–í–æ–∑–≤—Ä–∞—â–∞—é –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", keyboard = kb.kb0())
		await bot.branch.exit(ans.peer_id)
	else:
		await ans("–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞üòä", keyboard = kb.kb0())
		db.output(ans.peer_id)
		await bot.branch.exit(ans.peer_id)

@bot.branch.simple_branch("yandex")
async def branch(ans: Message):
	if ans.text.lower() == "–Ω–∞–∑–∞–¥":
		await ans("–í–æ–∑–≤—Ä–∞—â–∞—é –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", keyboard = kb.kb0())
		await bot.branch.exit(ans.peer_id)

	else:
		await ans("–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞üòä", keyboard = kb.kb0())
		db.output(ans.peer_id)
		await bot.branch.exit(ans.peer_id)

@bot.on.message()
async def wrapper(ans: Message):
	response = ans.text
	user_id = ans.peer_id
	if(not db.subscriber_exists(user_id)):
		user_info = await bot.api.users.get(user_id, name_case="gen")
		user_name = user_info[0].first_name
		user_surname = user_info[0].last_name
		user_name = user_name +' '+user_surname
		db.add_db(user_id,user_name)
		await ans('–ó–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –≤ –±–æ—Ç–µ –º—ã –¥–∞—Ä–∏–º –≤–∞–º 1000üßø', keyboard = kb.kb0())
	if response.lower() == '–Ω–∞—á–∞—Ç—å':
		await ans('–≠—Ç–æ –≥–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞. –¢—ã –º–æ–∂–µ—à—å –≤—ã–±—Ä–∞—Ç—å –ª—é–±–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ!', keyboard = kb.kb0())

	elif response.lower() == '–±–∞–ª–∞–Ω—Å üí≥':
		a,b = db.balance(user_id)
		await ans('–ë–∞–ª–∞–Ω—Å üí≥: \n–ù–∞ –≤–∞—à–µ–º –±–∞–ª–∞–Ω—Å–µ:\n{:.0f}üßø ( ={:.0f} —Ä—É–±. ) \n {:.0f} üí∞'.format(b,b/100,a), keyboard = kb.kb1(link))

	elif response.lower() == '—Ä–∞–±–æ—Ç–∞—Ç—å ü§ñ':
		f,c = db.doxod(user_id)
		if f == 1:
			await ans('–ó–∞–¥–∞–Ω–∏–µ –ø—Ä–æ–π–¥–µ–Ω–æ!\n–í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –Ω–∞–≥—Ä–∞–¥—É: 200üßø')
		elif f == 2:
			await ans('–ó–∞–¥–∞–Ω–∏–µ –ø—Ä–æ–π–¥–µ–Ω–æ!\n–í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –Ω–∞–≥—Ä–∞–¥—É: 1000üßø')
		elif f == 4:
			await ans('–ó–∞–¥–∞–Ω–∏–µ –ø—Ä–æ–π–¥–µ–Ω–æ!\n–í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –Ω–∞–≥—Ä–∞–¥—É: 1200üßø')
		elif f == 5:
			await ans('–ó–∞–¥–∞–Ω–∏–µ –ø—Ä–æ–π–¥–µ–Ω–æ!\n–í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –Ω–∞–≥—Ä–∞–¥—É: 1200üßø')

		await ans(f'–í—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏ {c} (üßø)')

	elif response.lower() == '–≤—ã–≤–µ—Å—Ç–∏ –¥–µ–Ω—å–≥–∏ (üßø)':
		if db.balance1(user_id) >= 75:
			if db.get_cheker1(user_id) == 0:
				await ans('–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã ', keyboard = kb.kb2())
			else:
				await ans('–í—ã —É–∂–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –∑–∞—è–≤–∫—É –Ω–∞ –≤—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤')
		else:
			await ans('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≥–æ–ª–¥—ã (üí∞) –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å—Ä–µ–¥—Å—Ç–≤.–£ –≤–∞—Å –Ω–∞ –±–∞–ª–∞–Ω—Å–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∫–∞–∫ –º–∏–Ω–∏–º—É–º 75 –±–∞–∫—Å–æ–≤!üí∏ –ö—É–ø–∏—Ç—å –≥–æ–ª–¥—É –º–æ–∂–Ω–æ –≤ —Ä–∞–∑–¥–µ–ª–µ –ë–∞–ª–∞–Ω—Å')

	elif response.lower() == '–∫–∏–≤–∏':
		await ans('–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–∏ —Ä–µ–∫–≤–µ–∑–∏—Ç—ã –∏ –æ–∂–∏–¥–∞–π—Ç–µ –∫–æ–≥–¥–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—è —Ä–∞—Å–º–æ—Ç—Ä–∏—Ç –≤–∞—à—É –∑–∞—è–≤–∫—É', keyboard = kb.back())
		await bot.branch.add(ans.peer_id, "qiwi")

	elif response.lower() == '–∫–∞—Ä—Ç–∞':
		await ans('–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–∏ —Ä–µ–∫–≤–µ–∑–∏—Ç—ã –∏ –æ–∂–∏–¥–∞–π—Ç–µ –∫–æ–≥–¥–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—è —Ä–∞—Å–º–æ—Ç—Ä–∏—Ç –≤–∞—à—É –∑–∞—è–≤–∫—É', keyboard = kb.back())
		await bot.branch.add(ans.peer_id, "carta")

	elif response.lower() == '—è–Ω–¥–µ–∫—Å –¥–µ–Ω—å–≥–∏':
		await ans('–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–∏ —Ä–µ–∫–≤–µ–∑–∏—Ç—ã –∏ –æ–∂–∏–¥–∞–π—Ç–µ –∫–æ–≥–¥–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—è —Ä–∞—Å–º–æ—Ç—Ä–∏—Ç –≤–∞—à—É –∑–∞—è–≤–∫—É', keyboard = kb.back())
		await bot.branch.add(ans.peer_id, "yandex")

	elif response.lower() == '–Ω–∞–∑–∞–¥':
		await ans('–≠—Ç–æ –≥–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞. –¢—ã –º–æ–∂–µ—à—å –≤—ã–±—Ä–∞—Ç—å –ª—é–±–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ!', keyboard = kb.kb0())

	elif response.lower() == '‚ùì –∑–∞—á–µ–º –Ω—É–∂–µ–Ω –¥–æ–Ω–∞—Ç':
		await ans('vk.com/@-187582264-dlya-chego')

	elif response.lower() == '–ø—Ä–æ–º–æ–∫–æ–¥ üè∑':
		await ans(f'–¢–≤–æ–π –ø—Ä–æ–º–æ–∫–æ–¥ {db.coder(user_id)}')

	elif response.lower() == '–∫–∞–∑–∏–Ω–æ üé±':
		if db.get_point(user_id) >= 300:
			sum = random.randint(100, 900)
			f = db.cazino(user_id, 300-sum)
			if f == 2:
				await ans('–ó–∞–¥–∞–Ω–∏–µ –ø—Ä–æ–π–¥–µ–Ω–æ!\n–í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –Ω–∞–≥—Ä–∞–¥—É: 400üßø')
			elif f == 3:
				await ans('–ó–∞–¥–∞–Ω–∏–µ –ø—Ä–æ–π–¥–µ–Ω–æ!\n–í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –Ω–∞–≥—Ä–∞–¥—É: 1üí∞')
			elif f == 4:
				await ans('–ó–∞–¥–∞–Ω–∏–µ –ø—Ä–æ–π–¥–µ–Ω–æ!\n–í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –Ω–∞–≥—Ä–∞–¥—É: 1200üßø')
			elif f == 5:
				await ans('–ó–∞–¥–∞–Ω–∏–µ –ø—Ä–æ–π–¥–µ–Ω–æ!\n–í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –Ω–∞–≥—Ä–∞–¥—É: 2000üßø')
			elif f == 6:
				await ans('–ó–∞–¥–∞–Ω–∏–µ –ø—Ä–æ–π–¥–µ–Ω–æ!\n–í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –Ω–∞–≥—Ä–∞–¥—É: 1üí∞')

			await ans("–î–æ–±—Ä–æ –ø–æ–∂–∞–¥—ã–≤–∞—Ç—å –≤ –∫–∞–∑–∏–Ω–æ '–§–æ—Ä—Ç—É–Ω–∞'\n –í—ã –ø–æ—Å—Ç–∞–≤–∏–ª–∏ 300üßø\n–ò –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ {}üßø".format(sum))
		else:
			await ans("–í–∞–º –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç üßø, –Ω—É–∂–Ω–æ 300üßø –¥–ª—è —Å—Ç–∞–≤–∫–∏")

	elif response.lower() == '–±–∏–∑–Ω–µ—Å—ã üì¶':
		a,b,d,f,j,g,h,q,w,m,n = db.biznos(user_id)
		await ans("–ë–∏–∑–Ω–µ—Å—ã üì¶: \n1 - –¢–æ—á–∫–∞ –∫–æ—Ñ–µ ‚òï {} \n2 - –ü—Ä–æ–¥—É–∫—Ç–æ–≤—ã–π –º–∞–≥–∞–∑–∏–Ω üçè {}\n3 - –ö–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–π –∫–ª—É–± üíª {} \n4 - –ü—è—Ç—ë—Ä–æ—á–∫–∞ ‚É£ {}\n5 - –ú–∞–≥–∞–∑–∏–Ω Adidas üëü {}\n6 - KFS üêî {} \n7 - –ú–∞–∫–¥–æ–Ω–∞–ª—å–¥—Å üçü {} \n8 - –ê–≤—Ç–æ—Å–∞–ª–æ–Ω Tesla üöó {}\n9 - –ö–æ–º–ø–∞–Ω–∏—è SpaceX üöÄ {}\n\n–í–∞—à –¥–æ—Ö–æ–¥ –≤ —á–∞—Å {}üßø\n–í–∞—à –¥–æ—Ö–æ–¥ –∑–∞ —Ä–∞–±–æ—Ç—É {}üßø".format(a,b,d,f,j,g,h,q,w,m,n) , keyboard = kb.kb3())

	elif response.lower() == '–∫—É–ø–∏—Ç—å –±–∏–∑–Ω–µ—Å üìà':
		d = db.bizno3s(user_id) 
		if d == True:
			await ans('–í—ã –ø—Ä–∏–æ–±—Ä–µ–ª–∏ –Ω–æ–≤—ã–π –±–∏–∑–Ω–µ—Å')
			if db.qw3(user_id) == 1:
				await ans('–ó–∞–¥–∞–Ω–∏–µ –ø—Ä–æ–π–¥–µ–Ω–æ!\n–í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –Ω–∞–≥—Ä–∞–¥—É: 800üßø')
		elif d == 5:
			await ans('–£ –≤–∞—Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –±–∏–∑–Ω–µ—Å')
		else:
			await ans('–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç üßø')

	elif response.lower() == '–µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å üéÅ':
		if db.get_user_bonus(user_id) == 0:
			sum = random.randint(500, 3000)
			await ans("–í–∞–º –≤—ã–ø–∞–ª–æ {}üßø".format(sum))
			db.plus_point_user(user_id, sum)
		else:
			await ans("–£ –≤–∞—Å —É–∂–µ –ø–æ–ª—É—á–∏–Ω –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å!")

	elif response.lower() == '–∑–∞–¥–∞–Ω–∏—è üìå':
		if db.qio(user_id) == False   :
			await ans("–í—Å–µ –∑–∞–¥–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã!")
		else:
			a,b,c,h,g = db.qio(user_id)
			await ans("üìå –ó–∞–¥–∞–Ω–∏–µ {}/10: \n{}\n\n–ù–∞–≥—Ä–∞–¥–∞: {}\n–ü—Ä–æ–≥—Ä–µ—Å—Å: {}/{}".format(a,b,c,h,g))

	else:
		if db.chek(user_id) == 0:
			if(not db.code(user_id, response)):
				await ans('–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Ç–∞–∫–æ–≥–æ –ø—Ä–æ–º–æ–∫–æ–¥–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç(')
			else:
				id,name = db.code1(response)
				if id == 1:
					await ans('–í—ã –≤–≤–µ–ª–∏ –ø—Ä–æ–º–æ–∫–æ–¥! –í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ 1000üßø'.format(id,name))
				else:
					await ans('–í—ã –≤–≤–µ–ª–∏ –ø—Ä–æ–º–æ–∫–æ–¥ @id{}({})! –í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ 1000üßø'.format(id,name))
				db.plus_point(user_id,1000)
		else:
			await ans('–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ —Ç—ã –º–æ–∂–µ—à—å —É–≤–∏–¥–µ—Ç—å –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ!')

@bot.error_handler.error_handler(6)
async def rps_handler(e: VKError):
	await sleep(1)
	await e.method_requested(**e.params_requested)

async def scheduled(wait_for):
	count,id = db.stata()
	while True:
		await asyncio.sleep(wait_for)
		response = requests.get(link2)
		if response.status_code == 200:
			qde = response.json()
			if qde['count'] > count:
				for i in range(0,len(qde['donates'])):
					edq = qde['donates'][i]['id']
					user_id = qde['donates'][i]['uid']
					sum = qde['donates'][i]['sum']
					if id == edq:
						id = qde['donates'][0]['id']
						break
					else:
						if db.plus_balance(user_id, sum) == 1:
							await bot.api.messages.send(
								peer_id=user_id,
								message="–ó–∞–¥–∞–Ω–∏–µ –ø—Ä–æ–π–¥–µ–Ω–æ!\n–í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –Ω–∞–≥—Ä–∞–¥—É: 70000üßø",
								random_id=bot.extension.random_id())
						else:
							await bot.api.messages.send(
								peer_id=user_id,
								message="–í–∞—à –±–∞–ª–∞–Ω—Å üí∞ –ø–æ–ø–æ–ª–Ω–µ–Ω!",
								random_id=bot.extension.random_id())
				count = qde['count']

		else:
			response = requests.get(link3)
			if response.status_code != 200:
				print('–û—à–∏–±–∫–∞ –¥–æ–Ω–∞—Ç–æ–≤, —Å–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç')
			else:
				qde = response.json()
				if qde['count'] > count:
					for i in range(0,len(qde['donates'])):
						edq = qde['donates'][i]['id']
						user_id = qde['donates'][i]['uid']
						sum = qde['donates'][i]['sum']
						if id == qde:
							id = qde['donates'][0]['id']
							break
						else:
							if db.plus_balance(user_id, sum) == 1:
								await bot.api.messages.send(
									peer_id=user_id,
									message="–ó–∞–¥–∞–Ω–∏–µ –ø—Ä–æ–π–¥–µ–Ω–æ!\n–í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –Ω–∞–≥—Ä–∞–¥—É: 70000üßø",
									random_id=bot.extension.random_id())
							else:
								await bot.api.messages.send(
									peer_id=user_id,
									message="–í–∞—à –±–∞–ª–∞–Ω—Å üí∞ –ø–æ–ø–æ–ª–Ω–µ–Ω!",
									random_id=bot.extension.random_id())
					count = qde['count']

		db.update_stata(id,count)

async def update():
	now = datetime.now()
	today = now.replace(hour=23, minute=54, second=59, microsecond=0)
	n = 0
	print(now)
	print(today)
	while True:
		now = datetime.now()
		await asyncio.sleep(5)
		n += 5
		if now > today:
			for i in db.get_bonus():
				db.update_bonus(i[1])
			await asyncio.sleep(600)
			now = datetime.now()
			today = now.replace(hour=23, minute=54, second=59, microsecond=0)
			print(now)
			print(today)
		if n >= 3600:
			n = 0
			for i in db.get_ckek():
				await bot.api.messages.send(
					peer_id=i[1],
					message=f"–í–∞—à –±–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞{db.update_doxod(i[1])}üßø",
					random_id=bot.extension.random_id())

if __name__ == '__main__':
	bot.loop.create_task(scheduled(10))
	bot.loop.create_task(update())
	bot.run_polling(skip_updates=False)
